datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}



model Employee {
  id           Int       @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String    @unique
  phoneNumber  String
  dateOfJoining DateTime
  position     String
  salary       Float
  departmentId Int
  department   Department @relation(fields: [departmentId], references: [id])
  timesheets   Timesheet[]
  employeeProjects EmployeeProjects[]
}

model Department {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  location    String
  employees   Employee[]
  projects    Project[]
}

model Project {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  startDate   DateTime
  endDate     DateTime?
  departmentId Int
  department   Department @relation(fields: [departmentId], references: [id])
  timesheets  Timesheet[]
  employeeProjects EmployeeProjects[]
}

model Timesheet {
  id          Int       @id @default(autoincrement())
  employeeId  Int
  employee    Employee  @relation(fields: [employeeId], references: [id])
  projectId   Int
  project     Project   @relation(fields: [projectId], references: [id])
  date        DateTime
  hoursWorked Float
  description String?
}

model EmployeeProjects {
  employeeId Int
  projectId  Int
  employee   Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  project    Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  @@id([employeeId, projectId])
}
